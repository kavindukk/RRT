import numpy as np

points = np.array([
                    [6.71033588, 8.64125567]
                    [6.38458716, 8.1373829 ]
                    [5.81792067, 7.94017973]
                    [5.21792159, 7.94123367]
                    [4.62709137, 7.83673655]
                    [4.98009292, 7.35156658]
                    [4.65384686, 6.84801568]
                    [4.22783231, 6.42550934]
                    [3.72348085, 6.75051642]
                    [3.19599503, 6.46458163]
                    [3.72197917, 6.17589375]
                    [3.54247649, 6.74841343]
                    [4.08721419, 6.49689636]
                    [3.71530402, 6.02606431]
                    [3.32531111, 5.57009772]
                    [2.80234646, 5.27597535]
                    [2.94569918, 4.69335197]
                    [2.63939212, 5.20927443]
                    [2.19928853, 4.80146464]
                    [2.23913052, 4.20278892]
                    [2.3931235 , 3.62288707]
                    [2.5789872 , 3.05240071]
                    [1.98273221, 3.11933337]
                    [1.60402183, 2.65395348]
                    [1.79176213, 2.08408193]
                    [1.53435623, 1.54210203]
                    [1.08080203, 1.14930618]
                    [0.50547204, 0.9790258 ]
                    [0.04152508, 0.59856133]
 ])

obstacles = np.array([[(8, 3), 2],
                      [(2, 1), 0.5],
                      [(1, 2), 0.5],
                      [(5, 5), 0.75],
                      [(1, 8), 1.5],
                      [(9, 9), 1],
                      [(5, 9), 0.75]
                      ])


smoothed_list = np.array([ points[0]])
node_1 = points[0]
node_2 = points[1]


def intersection(p1, p2, r):
    m = (p2[1]-p1[1])/(p2[0]-p1[0])
    a = m
    b = -1
    c = p1[1]- m*p1[0]
    d = np.abs( a*r[0] + b*r[1] + c)/np.sqrt(a**2+b**2)
    return d